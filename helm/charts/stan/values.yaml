##################################
#                                #
#  NATS Streaming Configuration  #
#                                #
##################################
stan:
  image: nats-streaming:0.17.0
  pullPolicy: IfNotPresent

  # Cluster name, generated into a name from the
  # release name by default.
  clusterID:

  logging:
    debug:
    trace:

  # In case of NATS not being embedded then
  # an URL for NATS is required.
  nats:
    url:

# Toggle whether to use setup a Pod Security Context
# ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
securityContext: null
# securityContext:
#   fsGroup: 1000
#   runAsUser: 1000
#   runAsNonRoot: true

# Affinity for pod assignment
# ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
affinity: {}

# Init containers as yaml declaration
initContainers: []

###########################
#                         #
#  Storage configuration  #
#                         #
###########################
store:
  # One value possible out of: "file" | "sql" | "memory"
  type: file

  #
  # Fault tolerance group
  #
  ft:
    group:

  # Configures streaming/store_limits as is.
  #
  # NOTE: Section in snake case since they will become
  # the same objects.
  #
  # Look at the NATS Streaming configuration for this:
  #
  # https://docs.nats.io/nats-streaming-server/configuring/cfgfile#store-limits-configuration
  #
  limits: {}

  #
  # File storage settings.
  #
  file:
    path: /data/stan/store
    storageSize: 1Gi

  # In case of using file or sql storage, sets up a 3 node cluster.
  cluster:
    enabled: false
    logPath: /data/stan/log

  #
  # SQL storage settings
  #
  sql:
    driver: postgres

    # this value is evaluated as a template, i.e. you can reference chart values
    # adjust to your needs
    source: |
      {{- with .Values.store.sql -}}
      dbname={{ .dbName }} user={{ .dbUser }} password={{ .dbPassword }} host={{ .dbHost }} sslmode=disable
      {{- end -}}

    # Create the database and database user.
    createdb:
      enabled: false

      # db user which has permissions to create databases
      dbManageUser: postgres
      dbManagePassword: null
      defaultDatabase: postgres

      # Client to use to create the db.
      image: postgres:11

    # Initialize the database.
    initdb:
      enabled: false

      # Client to use to init the db.
      image: postgres:11

    dbName: postgres
    dbUser: postgres
    dbPassword: stan
    dbHost: ""
    dbPort: 5432

#######################################
#                                     #
# Prometheus Exporter configuration   #
#                                     #
#######################################
exporter:
  enabled: true
  image: synadia/prometheus-nats-exporter:0.6.0
  pullPolicy: IfNotPresent

##################################
#                                #
#  Embedded NATS Configuration   #
#                                #
##################################
# TODO: Support NATS embedded mode by including
# nats chart values.
